//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class AdaptiveTriggerExtension
{
    public static Microsoft.Maui.Controls.AdaptiveTrigger MinWindowHeight(this Microsoft.Maui.Controls.AdaptiveTrigger self,
        double minWindowHeight)
    {
        self.SetValue(Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowHeightProperty, minWindowHeight);
        return self;
    }
    
    public static Microsoft.Maui.Controls.AdaptiveTrigger MinWindowHeight(this Microsoft.Maui.Controls.AdaptiveTrigger self, Func<PropertyContext<Microsoft.Maui.Controls.AdaptiveTrigger , double>, IPropertyBuilder<Microsoft.Maui.Controls.AdaptiveTrigger , double>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.AdaptiveTrigger , double>(self, Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowHeightProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.AdaptiveTrigger> MinWindowHeight(this SettersContext<Microsoft.Maui.Controls.AdaptiveTrigger> self,
        double minWindowHeight)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowHeightProperty, Value = minWindowHeight });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.AdaptiveTrigger> MinWindowHeight(this SettersContext<Microsoft.Maui.Controls.AdaptiveTrigger> self, Func<PropertySettersContext<Microsoft.Maui.Controls.AdaptiveTrigger, double>, IPropertySettersBuilder<Microsoft.Maui.Controls.AdaptiveTrigger, double>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.AdaptiveTrigger, double>(self.XamlSetters, Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowHeightProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.AdaptiveTrigger MinWindowWidth(this Microsoft.Maui.Controls.AdaptiveTrigger self,
        double minWindowWidth)
    {
        self.SetValue(Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowWidthProperty, minWindowWidth);
        return self;
    }
    
    public static Microsoft.Maui.Controls.AdaptiveTrigger MinWindowWidth(this Microsoft.Maui.Controls.AdaptiveTrigger self, Func<PropertyContext<Microsoft.Maui.Controls.AdaptiveTrigger , double>, IPropertyBuilder<Microsoft.Maui.Controls.AdaptiveTrigger , double>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.AdaptiveTrigger , double>(self, Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowWidthProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.AdaptiveTrigger> MinWindowWidth(this SettersContext<Microsoft.Maui.Controls.AdaptiveTrigger> self,
        double minWindowWidth)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowWidthProperty, Value = minWindowWidth });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.AdaptiveTrigger> MinWindowWidth(this SettersContext<Microsoft.Maui.Controls.AdaptiveTrigger> self, Func<PropertySettersContext<Microsoft.Maui.Controls.AdaptiveTrigger, double>, IPropertySettersBuilder<Microsoft.Maui.Controls.AdaptiveTrigger, double>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.AdaptiveTrigger, double>(self.XamlSetters, Microsoft.Maui.Controls.AdaptiveTrigger.MinWindowWidthProperty);
        configure(context).Build();
        return self;
    }
    
}


