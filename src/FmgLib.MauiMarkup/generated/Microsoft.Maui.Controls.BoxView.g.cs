//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class BoxViewExtension
{
    public static T Color<T>(this T self,
        Microsoft.Maui.Graphics.Color color)
        where T : Microsoft.Maui.Controls.BoxView
    {
        self.SetValue(Microsoft.Maui.Controls.BoxView.ColorProperty, color);
        return self;
    }
    
    public static T Color<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.BoxView
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.BoxView.ColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Color<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color color)
        where T : Microsoft.Maui.Controls.BoxView
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.BoxView.ColorProperty, Value = color });
        return self;
    }
    
    public static SettersContext<T> Color<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.BoxView
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.BoxView.ColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static Task<bool> AnimateColorTo<T>(this T self, Microsoft.Maui.Graphics.Color value, uint length = 250, Easing? easing = null)
        where T : Microsoft.Maui.Controls.BoxView
    {
        Microsoft.Maui.Graphics.Color fromValue = self.Color;
        var transform = (double t) => Transformations.ColorTransform(fromValue, value, t);
        var callback = (Microsoft.Maui.Graphics.Color actValue) => { self.SetValue(Microsoft.Maui.Controls.BoxView.ColorProperty, actValue); };
        return Transformations.AnimateAsync<Microsoft.Maui.Graphics.Color>(self, "AnimateColorTo", transform, callback, length, easing);
    }
    
    public static T CornerRadius<T>(this T self,
        Microsoft.Maui.CornerRadius cornerRadius)
        where T : Microsoft.Maui.Controls.BoxView
    {
        self.SetValue(Microsoft.Maui.Controls.BoxView.CornerRadiusProperty, cornerRadius);
        return self;
    }
    
    public static T CornerRadius<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.CornerRadius>, IPropertyBuilder<T, Microsoft.Maui.CornerRadius>> configure)
        where T : Microsoft.Maui.Controls.BoxView
    {
        var context = new PropertyContext<T, Microsoft.Maui.CornerRadius>(self, Microsoft.Maui.Controls.BoxView.CornerRadiusProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> CornerRadius<T>(this SettersContext<T> self,
        Microsoft.Maui.CornerRadius cornerRadius)
        where T : Microsoft.Maui.Controls.BoxView
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.BoxView.CornerRadiusProperty, Value = cornerRadius });
        return self;
    }
    
    public static SettersContext<T> CornerRadius<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.CornerRadius>, IPropertySettersBuilder<T, Microsoft.Maui.CornerRadius>> configure)
        where T : Microsoft.Maui.Controls.BoxView
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.CornerRadius>(self.XamlSetters, Microsoft.Maui.Controls.BoxView.CornerRadiusProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.BoxView CornerRadius(this Microsoft.Maui.Controls.BoxView self,
        double topLeft, double topRight, double bottomLeft, double bottomRight)
    {
        self.SetValue(Microsoft.Maui.Controls.BoxView.CornerRadiusProperty, new CornerRadius(topLeft, topRight, bottomLeft, bottomRight));
        return self;
    }

    public static SettersContext<Microsoft.Maui.Controls.BoxView> CornerRadius(this SettersContext<Microsoft.Maui.Controls.BoxView> self,
        double topLeft, double topRight, double bottomLeft, double bottomRight)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.BoxView.CornerRadiusProperty, Value = new CornerRadius(topLeft, topRight, bottomLeft, bottomRight) });
        return self;
    }
    
}


