//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

[Obsolete("The ClickGestureRecognizer is deprecated; please use TapGestureRecognizer or PointerGestureRecognizer instead.")]
public static partial class ClickGestureRecognizerExtension
{
    public static Microsoft.Maui.Controls.ClickGestureRecognizer Buttons(this Microsoft.Maui.Controls.ClickGestureRecognizer self,
        Microsoft.Maui.Controls.ButtonsMask buttons)
    {
        self.SetValue(Microsoft.Maui.Controls.ClickGestureRecognizer.ButtonsProperty, buttons);
        return self;
    }
    
    public static Microsoft.Maui.Controls.ClickGestureRecognizer Buttons(this Microsoft.Maui.Controls.ClickGestureRecognizer self, Func<PropertyContext<Microsoft.Maui.Controls.ClickGestureRecognizer , Microsoft.Maui.Controls.ButtonsMask>, IPropertyBuilder<Microsoft.Maui.Controls.ClickGestureRecognizer , Microsoft.Maui.Controls.ButtonsMask>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.ClickGestureRecognizer , Microsoft.Maui.Controls.ButtonsMask>(self, Microsoft.Maui.Controls.ClickGestureRecognizer.ButtonsProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> Buttons(this SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> self,
        Microsoft.Maui.Controls.ButtonsMask buttons)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.ClickGestureRecognizer.ButtonsProperty, Value = buttons });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> Buttons(this SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> self, Func<PropertySettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer, Microsoft.Maui.Controls.ButtonsMask>, IPropertySettersBuilder<Microsoft.Maui.Controls.ClickGestureRecognizer, Microsoft.Maui.Controls.ButtonsMask>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer, Microsoft.Maui.Controls.ButtonsMask>(self.XamlSetters, Microsoft.Maui.Controls.ClickGestureRecognizer.ButtonsProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.ClickGestureRecognizer Command(this Microsoft.Maui.Controls.ClickGestureRecognizer self,
        System.Windows.Input.ICommand command)
    {
        self.SetValue(Microsoft.Maui.Controls.ClickGestureRecognizer.CommandProperty, command);
        return self;
    }
    
    public static Microsoft.Maui.Controls.ClickGestureRecognizer Command(this Microsoft.Maui.Controls.ClickGestureRecognizer self, Func<PropertyContext<Microsoft.Maui.Controls.ClickGestureRecognizer , System.Windows.Input.ICommand>, IPropertyBuilder<Microsoft.Maui.Controls.ClickGestureRecognizer , System.Windows.Input.ICommand>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.ClickGestureRecognizer , System.Windows.Input.ICommand>(self, Microsoft.Maui.Controls.ClickGestureRecognizer.CommandProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> Command(this SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> self,
        System.Windows.Input.ICommand command)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.ClickGestureRecognizer.CommandProperty, Value = command });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> Command(this SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> self, Func<PropertySettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer, System.Windows.Input.ICommand>, IPropertySettersBuilder<Microsoft.Maui.Controls.ClickGestureRecognizer, System.Windows.Input.ICommand>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer, System.Windows.Input.ICommand>(self.XamlSetters, Microsoft.Maui.Controls.ClickGestureRecognizer.CommandProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.ClickGestureRecognizer CommandParameter(this Microsoft.Maui.Controls.ClickGestureRecognizer self,
        object commandParameter)
    {
        self.SetValue(Microsoft.Maui.Controls.ClickGestureRecognizer.CommandParameterProperty, commandParameter);
        return self;
    }
    
    public static Microsoft.Maui.Controls.ClickGestureRecognizer CommandParameter(this Microsoft.Maui.Controls.ClickGestureRecognizer self, Func<PropertyContext<Microsoft.Maui.Controls.ClickGestureRecognizer , object>, IPropertyBuilder<Microsoft.Maui.Controls.ClickGestureRecognizer , object>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.ClickGestureRecognizer , object>(self, Microsoft.Maui.Controls.ClickGestureRecognizer.CommandParameterProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> CommandParameter(this SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> self,
        object commandParameter)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.ClickGestureRecognizer.CommandParameterProperty, Value = commandParameter });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> CommandParameter(this SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> self, Func<PropertySettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer, object>, IPropertySettersBuilder<Microsoft.Maui.Controls.ClickGestureRecognizer, object>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer, object>(self.XamlSetters, Microsoft.Maui.Controls.ClickGestureRecognizer.CommandParameterProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.ClickGestureRecognizer NumberOfClicksRequired(this Microsoft.Maui.Controls.ClickGestureRecognizer self,
        int numberOfClicksRequired)
    {
        self.SetValue(Microsoft.Maui.Controls.ClickGestureRecognizer.NumberOfClicksRequiredProperty, numberOfClicksRequired);
        return self;
    }
    
    public static Microsoft.Maui.Controls.ClickGestureRecognizer NumberOfClicksRequired(this Microsoft.Maui.Controls.ClickGestureRecognizer self, Func<PropertyContext<Microsoft.Maui.Controls.ClickGestureRecognizer , int>, IPropertyBuilder<Microsoft.Maui.Controls.ClickGestureRecognizer , int>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.ClickGestureRecognizer , int>(self, Microsoft.Maui.Controls.ClickGestureRecognizer.NumberOfClicksRequiredProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> NumberOfClicksRequired(this SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> self,
        int numberOfClicksRequired)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.ClickGestureRecognizer.NumberOfClicksRequiredProperty, Value = numberOfClicksRequired });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> NumberOfClicksRequired(this SettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer> self, Func<PropertySettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer, int>, IPropertySettersBuilder<Microsoft.Maui.Controls.ClickGestureRecognizer, int>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.ClickGestureRecognizer, int>(self.XamlSetters, Microsoft.Maui.Controls.ClickGestureRecognizer.NumberOfClicksRequiredProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.ClickGestureRecognizer OnClicked(this Microsoft.Maui.Controls.ClickGestureRecognizer self, System.EventHandler handler)
    {
        self.Clicked += handler;
        return self;
    }
    
    public static Microsoft.Maui.Controls.ClickGestureRecognizer OnClicked(this Microsoft.Maui.Controls.ClickGestureRecognizer self, System.Action<Microsoft.Maui.Controls.ClickGestureRecognizer> action)
    {
        self.Clicked += (o, arg) => action(self);
        return self;
    }

}


