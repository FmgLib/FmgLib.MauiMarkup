//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class FontImageSourceExtension
{
    public static T Color<T>(this T self,
        Microsoft.Maui.Graphics.Color color)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        self.SetValue(Microsoft.Maui.Controls.FontImageSource.ColorProperty, color);
        return self;
    }
    
    public static T Color<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.FontImageSource.ColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Color<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color color)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.FontImageSource.ColorProperty, Value = color });
        return self;
    }
    
    public static SettersContext<T> Color<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.FontImageSource.ColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static T FontAutoScalingEnabled<T>(this T self,
        bool fontAutoScalingEnabled)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        self.SetValue(Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabledProperty, fontAutoScalingEnabled);
        return self;
    }
    
    public static T FontAutoScalingEnabled<T>(this T self, Func<PropertyContext<T, bool>, IPropertyBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        var context = new PropertyContext<T, bool>(self, Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> FontAutoScalingEnabled<T>(this SettersContext<T> self,
        bool fontAutoScalingEnabled)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabledProperty, Value = fontAutoScalingEnabled });
        return self;
    }
    
    public static SettersContext<T> FontAutoScalingEnabled<T>(this SettersContext<T> self, Func<PropertySettersContext<T, bool>, IPropertySettersBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        var context = new PropertySettersContext<T, bool>(self.XamlSetters, Microsoft.Maui.Controls.FontImageSource.FontAutoScalingEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static T FontFamily<T>(this T self,
        string fontFamily)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        self.SetValue(Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty, fontFamily);
        return self;
    }
    
    public static T FontFamily<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> FontFamily<T>(this SettersContext<T> self,
        string fontFamily)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty, Value = fontFamily });
        return self;
    }
    
    public static SettersContext<T> FontFamily<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.FontImageSource.FontFamilyProperty);
        configure(context).Build();
        return self;
    }
    
    public static T Glyph<T>(this T self,
        string glyph)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        self.SetValue(Microsoft.Maui.Controls.FontImageSource.GlyphProperty, glyph);
        return self;
    }
    
    public static T Glyph<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.FontImageSource.GlyphProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Glyph<T>(this SettersContext<T> self,
        string glyph)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.FontImageSource.GlyphProperty, Value = glyph });
        return self;
    }
    
    public static SettersContext<T> Glyph<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.FontImageSource.GlyphProperty);
        configure(context).Build();
        return self;
    }
    
    public static T Size<T>(this T self,
        double size)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        self.SetValue(Microsoft.Maui.Controls.FontImageSource.SizeProperty, size);
        return self;
    }
    
    public static T Size<T>(this T self, Func<PropertyContext<T, double>, IPropertyBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        var context = new PropertyContext<T, double>(self, Microsoft.Maui.Controls.FontImageSource.SizeProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Size<T>(this SettersContext<T> self,
        double size)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.FontImageSource.SizeProperty, Value = size });
        return self;
    }
    
    public static SettersContext<T> Size<T>(this SettersContext<T> self, Func<PropertySettersContext<T, double>, IPropertySettersBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.FontImageSource
    {
        var context = new PropertySettersContext<T, double>(self.XamlSetters, Microsoft.Maui.Controls.FontImageSource.SizeProperty);
        configure(context).Build();
        return self;
    }
    
}


