//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class GraphicsViewExtension
{
    public static T Drawable<T>(this T self,
        Microsoft.Maui.Graphics.IDrawable drawable)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.SetValue(Microsoft.Maui.Controls.GraphicsView.DrawableProperty, drawable);
        return self;
    }
    
    public static T Drawable<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.IDrawable>, IPropertyBuilder<T, Microsoft.Maui.Graphics.IDrawable>> configure)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.IDrawable>(self, Microsoft.Maui.Controls.GraphicsView.DrawableProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Drawable<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.IDrawable drawable)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.GraphicsView.DrawableProperty, Value = drawable });
        return self;
    }
    
    public static SettersContext<T> Drawable<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.IDrawable>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.IDrawable>> configure)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.IDrawable>(self.XamlSetters, Microsoft.Maui.Controls.GraphicsView.DrawableProperty);
        configure(context).Build();
        return self;
    }
    
    public static T OnCancelInteraction<T>(this T self, System.EventHandler handler)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.CancelInteraction += handler;
        return self;
    }
    
    public static T OnCancelInteraction<T>(this T self, System.Action<T> action)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.CancelInteraction += (o, arg) => action(self);
        return self;
    }
        
    public static T OnDragInteraction<T>(this T self, System.EventHandler<Microsoft.Maui.Controls.TouchEventArgs> handler)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.DragInteraction += handler;
        return self;
    }
    
    public static T OnDragInteraction<T>(this T self, System.Action<T> action)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.DragInteraction += (o, arg) => action(self);
        return self;
    }
        
    public static T OnEndHoverInteraction<T>(this T self, System.EventHandler handler)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.EndHoverInteraction += handler;
        return self;
    }
    
    public static T OnEndHoverInteraction<T>(this T self, System.Action<T> action)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.EndHoverInteraction += (o, arg) => action(self);
        return self;
    }
        
    public static T OnEndInteraction<T>(this T self, System.EventHandler<Microsoft.Maui.Controls.TouchEventArgs> handler)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.EndInteraction += handler;
        return self;
    }
    
    public static T OnEndInteraction<T>(this T self, System.Action<T> action)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.EndInteraction += (o, arg) => action(self);
        return self;
    }
        
    public static T OnMoveHoverInteraction<T>(this T self, System.EventHandler<Microsoft.Maui.Controls.TouchEventArgs> handler)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.MoveHoverInteraction += handler;
        return self;
    }
    
    public static T OnMoveHoverInteraction<T>(this T self, System.Action<T> action)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.MoveHoverInteraction += (o, arg) => action(self);
        return self;
    }
        
    public static T OnStartHoverInteraction<T>(this T self, System.EventHandler<Microsoft.Maui.Controls.TouchEventArgs> handler)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.StartHoverInteraction += handler;
        return self;
    }
    
    public static T OnStartHoverInteraction<T>(this T self, System.Action<T> action)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.StartHoverInteraction += (o, arg) => action(self);
        return self;
    }
        
    public static T OnStartInteraction<T>(this T self, System.EventHandler<Microsoft.Maui.Controls.TouchEventArgs> handler)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.StartInteraction += handler;
        return self;
    }
    
    public static T OnStartInteraction<T>(this T self, System.Action<T> action)
        where T : Microsoft.Maui.Controls.GraphicsView
    {
        self.StartInteraction += (o, arg) => action(self);
        return self;
    }
        
}


