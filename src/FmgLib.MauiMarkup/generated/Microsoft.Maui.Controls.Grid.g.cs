//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class GridExtension
{
    public static T ColumnDefinitions<T>(this T self,
        Microsoft.Maui.Controls.ColumnDefinitionCollection columnDefinitions)
        where T : Microsoft.Maui.Controls.Grid
    {
        self.SetValue(Microsoft.Maui.Controls.Grid.ColumnDefinitionsProperty, columnDefinitions);
        return self;
    }
    
    public static T ColumnDefinitions<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.ColumnDefinitionCollection>, IPropertyBuilder<T, Microsoft.Maui.Controls.ColumnDefinitionCollection>> configure)
        where T : Microsoft.Maui.Controls.Grid
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.ColumnDefinitionCollection>(self, Microsoft.Maui.Controls.Grid.ColumnDefinitionsProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ColumnDefinitions<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.ColumnDefinitionCollection columnDefinitions)
        where T : Microsoft.Maui.Controls.Grid
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Grid.ColumnDefinitionsProperty, Value = columnDefinitions });
        return self;
    }
    
    public static SettersContext<T> ColumnDefinitions<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.ColumnDefinitionCollection>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.ColumnDefinitionCollection>> configure)
        where T : Microsoft.Maui.Controls.Grid
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.ColumnDefinitionCollection>(self.XamlSetters, Microsoft.Maui.Controls.Grid.ColumnDefinitionsProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ColumnSpacing<T>(this T self,
        double columnSpacing)
        where T : Microsoft.Maui.Controls.Grid
    {
        self.SetValue(Microsoft.Maui.Controls.Grid.ColumnSpacingProperty, columnSpacing);
        return self;
    }
    
    public static T ColumnSpacing<T>(this T self, Func<PropertyContext<T, double>, IPropertyBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.Grid
    {
        var context = new PropertyContext<T, double>(self, Microsoft.Maui.Controls.Grid.ColumnSpacingProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ColumnSpacing<T>(this SettersContext<T> self,
        double columnSpacing)
        where T : Microsoft.Maui.Controls.Grid
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Grid.ColumnSpacingProperty, Value = columnSpacing });
        return self;
    }
    
    public static SettersContext<T> ColumnSpacing<T>(this SettersContext<T> self, Func<PropertySettersContext<T, double>, IPropertySettersBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.Grid
    {
        var context = new PropertySettersContext<T, double>(self.XamlSetters, Microsoft.Maui.Controls.Grid.ColumnSpacingProperty);
        configure(context).Build();
        return self;
    }
    
    public static Task<bool> AnimateColumnSpacingTo<T>(this T self, double value, uint length = 250, Easing? easing = null)
        where T : Microsoft.Maui.Controls.Grid
    {
        double fromValue = self.ColumnSpacing;
        var transform = (double t) => Transformations.DoubleTransform(fromValue, value, t);
        var callback = (double actValue) => { self.SetValue(Microsoft.Maui.Controls.Grid.ColumnSpacingProperty, actValue); };
        return Transformations.AnimateAsync<double>(self, "AnimateColumnSpacingTo", transform, callback, length, easing);
    }
    
    public static T RowDefinitions<T>(this T self,
        Microsoft.Maui.Controls.RowDefinitionCollection rowDefinitions)
        where T : Microsoft.Maui.Controls.Grid
    {
        self.SetValue(Microsoft.Maui.Controls.Grid.RowDefinitionsProperty, rowDefinitions);
        return self;
    }
    
    public static T RowDefinitions<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.RowDefinitionCollection>, IPropertyBuilder<T, Microsoft.Maui.Controls.RowDefinitionCollection>> configure)
        where T : Microsoft.Maui.Controls.Grid
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.RowDefinitionCollection>(self, Microsoft.Maui.Controls.Grid.RowDefinitionsProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> RowDefinitions<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.RowDefinitionCollection rowDefinitions)
        where T : Microsoft.Maui.Controls.Grid
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Grid.RowDefinitionsProperty, Value = rowDefinitions });
        return self;
    }
    
    public static SettersContext<T> RowDefinitions<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.RowDefinitionCollection>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.RowDefinitionCollection>> configure)
        where T : Microsoft.Maui.Controls.Grid
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.RowDefinitionCollection>(self.XamlSetters, Microsoft.Maui.Controls.Grid.RowDefinitionsProperty);
        configure(context).Build();
        return self;
    }
    
    public static T RowSpacing<T>(this T self,
        double rowSpacing)
        where T : Microsoft.Maui.Controls.Grid
    {
        self.SetValue(Microsoft.Maui.Controls.Grid.RowSpacingProperty, rowSpacing);
        return self;
    }
    
    public static T RowSpacing<T>(this T self, Func<PropertyContext<T, double>, IPropertyBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.Grid
    {
        var context = new PropertyContext<T, double>(self, Microsoft.Maui.Controls.Grid.RowSpacingProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> RowSpacing<T>(this SettersContext<T> self,
        double rowSpacing)
        where T : Microsoft.Maui.Controls.Grid
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Grid.RowSpacingProperty, Value = rowSpacing });
        return self;
    }
    
    public static SettersContext<T> RowSpacing<T>(this SettersContext<T> self, Func<PropertySettersContext<T, double>, IPropertySettersBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.Grid
    {
        var context = new PropertySettersContext<T, double>(self.XamlSetters, Microsoft.Maui.Controls.Grid.RowSpacingProperty);
        configure(context).Build();
        return self;
    }
    
    public static Task<bool> AnimateRowSpacingTo<T>(this T self, double value, uint length = 250, Easing? easing = null)
        where T : Microsoft.Maui.Controls.Grid
    {
        double fromValue = self.RowSpacing;
        var transform = (double t) => Transformations.DoubleTransform(fromValue, value, t);
        var callback = (double actValue) => { self.SetValue(Microsoft.Maui.Controls.Grid.RowSpacingProperty, actValue); };
        return Transformations.AnimateAsync<double>(self, "AnimateRowSpacingTo", transform, callback, length, easing);
    }
    
}


