//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class GroupableItemsViewExtension
{
    public static T GroupFooterTemplate<T>(this T self,
        Microsoft.Maui.Controls.DataTemplate groupFooterTemplate)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        self.SetValue(Microsoft.Maui.Controls.GroupableItemsView.GroupFooterTemplateProperty, groupFooterTemplate);
        return self;
    }
    
    public static T GroupFooterTemplate<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.DataTemplate>, IPropertyBuilder<T, Microsoft.Maui.Controls.DataTemplate>> configure)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.DataTemplate>(self, Microsoft.Maui.Controls.GroupableItemsView.GroupFooterTemplateProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> GroupFooterTemplate<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.DataTemplate groupFooterTemplate)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.GroupableItemsView.GroupFooterTemplateProperty, Value = groupFooterTemplate });
        return self;
    }
    
    public static SettersContext<T> GroupFooterTemplate<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.DataTemplate>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.DataTemplate>> configure)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.DataTemplate>(self.XamlSetters, Microsoft.Maui.Controls.GroupableItemsView.GroupFooterTemplateProperty);
        configure(context).Build();
        return self;
    }
    
    public static T GroupFooterTemplate<T>(this T self, System.Func<object> loadTemplate)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        self.SetValue(Microsoft.Maui.Controls.GroupableItemsView.GroupFooterTemplateProperty, new DataTemplate(loadTemplate));
        return self;
    }
    
    public static T GroupHeaderTemplate<T>(this T self,
        Microsoft.Maui.Controls.DataTemplate groupHeaderTemplate)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        self.SetValue(Microsoft.Maui.Controls.GroupableItemsView.GroupHeaderTemplateProperty, groupHeaderTemplate);
        return self;
    }
    
    public static T GroupHeaderTemplate<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.DataTemplate>, IPropertyBuilder<T, Microsoft.Maui.Controls.DataTemplate>> configure)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.DataTemplate>(self, Microsoft.Maui.Controls.GroupableItemsView.GroupHeaderTemplateProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> GroupHeaderTemplate<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.DataTemplate groupHeaderTemplate)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.GroupableItemsView.GroupHeaderTemplateProperty, Value = groupHeaderTemplate });
        return self;
    }
    
    public static SettersContext<T> GroupHeaderTemplate<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.DataTemplate>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.DataTemplate>> configure)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.DataTemplate>(self.XamlSetters, Microsoft.Maui.Controls.GroupableItemsView.GroupHeaderTemplateProperty);
        configure(context).Build();
        return self;
    }
    
    public static T GroupHeaderTemplate<T>(this T self, System.Func<object> loadTemplate)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        self.SetValue(Microsoft.Maui.Controls.GroupableItemsView.GroupHeaderTemplateProperty, new DataTemplate(loadTemplate));
        return self;
    }
    
    public static T IsGrouped<T>(this T self,
        bool isGrouped)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        self.SetValue(Microsoft.Maui.Controls.GroupableItemsView.IsGroupedProperty, isGrouped);
        return self;
    }
    
    public static T IsGrouped<T>(this T self, Func<PropertyContext<T, bool>, IPropertyBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        var context = new PropertyContext<T, bool>(self, Microsoft.Maui.Controls.GroupableItemsView.IsGroupedProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> IsGrouped<T>(this SettersContext<T> self,
        bool isGrouped)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.GroupableItemsView.IsGroupedProperty, Value = isGrouped });
        return self;
    }
    
    public static SettersContext<T> IsGrouped<T>(this SettersContext<T> self, Func<PropertySettersContext<T, bool>, IPropertySettersBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.GroupableItemsView
    {
        var context = new PropertySettersContext<T, bool>(self.XamlSetters, Microsoft.Maui.Controls.GroupableItemsView.IsGroupedProperty);
        configure(context).Build();
        return self;
    }
    
}


