//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class ImageCellExtension
{
    public static T ImageSource<T>(this T self,
        Microsoft.Maui.Controls.ImageSource imageSource)
        where T : Microsoft.Maui.Controls.ImageCell
    {
        self.SetValue(Microsoft.Maui.Controls.ImageCell.ImageSourceProperty, imageSource);
        return self;
    }
    
    public static T ImageSource<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.ImageSource>, IPropertyBuilder<T, Microsoft.Maui.Controls.ImageSource>> configure)
        where T : Microsoft.Maui.Controls.ImageCell
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.ImageSource>(self, Microsoft.Maui.Controls.ImageCell.ImageSourceProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ImageSource<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.ImageSource imageSource)
        where T : Microsoft.Maui.Controls.ImageCell
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.ImageCell.ImageSourceProperty, Value = imageSource });
        return self;
    }
    
    public static SettersContext<T> ImageSource<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.ImageSource>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.ImageSource>> configure)
        where T : Microsoft.Maui.Controls.ImageCell
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.ImageSource>(self.XamlSetters, Microsoft.Maui.Controls.ImageCell.ImageSourceProperty);
        configure(context).Build();
        return self;
    }
    
}


