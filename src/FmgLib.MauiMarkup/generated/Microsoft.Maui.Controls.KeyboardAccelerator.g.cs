//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class KeyboardAcceleratorExtension
{
    public static T Key<T>(this T self,
        string? key)
        where T : Microsoft.Maui.Controls.KeyboardAccelerator
    {
        self.SetValue(Microsoft.Maui.Controls.KeyboardAccelerator.KeyProperty, key);
        return self;
    }
    
    public static T Key<T>(this T self, Func<PropertyContext<T, string?>, IPropertyBuilder<T, string?>> configure)
        where T : Microsoft.Maui.Controls.KeyboardAccelerator
    {
        var context = new PropertyContext<T, string?>(self, Microsoft.Maui.Controls.KeyboardAccelerator.KeyProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Key<T>(this SettersContext<T> self,
        string? key)
        where T : Microsoft.Maui.Controls.KeyboardAccelerator
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.KeyboardAccelerator.KeyProperty, Value = key });
        return self;
    }
    
    public static SettersContext<T> Key<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string?>, IPropertySettersBuilder<T, string?>> configure)
        where T : Microsoft.Maui.Controls.KeyboardAccelerator
    {
        var context = new PropertySettersContext<T, string?>(self.XamlSetters, Microsoft.Maui.Controls.KeyboardAccelerator.KeyProperty);
        configure(context).Build();
        return self;
    }
    
    public static T Modifiers<T>(this T self,
        Microsoft.Maui.KeyboardAcceleratorModifiers modifiers)
        where T : Microsoft.Maui.Controls.KeyboardAccelerator
    {
        self.SetValue(Microsoft.Maui.Controls.KeyboardAccelerator.ModifiersProperty, modifiers);
        return self;
    }
    
    public static T Modifiers<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.KeyboardAcceleratorModifiers>, IPropertyBuilder<T, Microsoft.Maui.KeyboardAcceleratorModifiers>> configure)
        where T : Microsoft.Maui.Controls.KeyboardAccelerator
    {
        var context = new PropertyContext<T, Microsoft.Maui.KeyboardAcceleratorModifiers>(self, Microsoft.Maui.Controls.KeyboardAccelerator.ModifiersProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Modifiers<T>(this SettersContext<T> self,
        Microsoft.Maui.KeyboardAcceleratorModifiers modifiers)
        where T : Microsoft.Maui.Controls.KeyboardAccelerator
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.KeyboardAccelerator.ModifiersProperty, Value = modifiers });
        return self;
    }
    
    public static SettersContext<T> Modifiers<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.KeyboardAcceleratorModifiers>, IPropertySettersBuilder<T, Microsoft.Maui.KeyboardAcceleratorModifiers>> configure)
        where T : Microsoft.Maui.Controls.KeyboardAccelerator
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.KeyboardAcceleratorModifiers>(self.XamlSetters, Microsoft.Maui.Controls.KeyboardAccelerator.ModifiersProperty);
        configure(context).Build();
        return self;
    }
    
}


