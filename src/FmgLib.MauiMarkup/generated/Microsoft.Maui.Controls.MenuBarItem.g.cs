//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class MenuBarItemExtension
{
    public static T IsEnabled<T>(this T self,
        bool isEnabled)
        where T : Microsoft.Maui.Controls.MenuBarItem
    {
        self.SetValue(Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty, isEnabled);
        return self;
    }
    
    public static T IsEnabled<T>(this T self, Func<PropertyContext<T, bool>, IPropertyBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.MenuBarItem
    {
        var context = new PropertyContext<T, bool>(self, Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> IsEnabled<T>(this SettersContext<T> self,
        bool isEnabled)
        where T : Microsoft.Maui.Controls.MenuBarItem
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty, Value = isEnabled });
        return self;
    }
    
    public static SettersContext<T> IsEnabled<T>(this SettersContext<T> self, Func<PropertySettersContext<T, bool>, IPropertySettersBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.MenuBarItem
    {
        var context = new PropertySettersContext<T, bool>(self.XamlSetters, Microsoft.Maui.Controls.MenuBarItem.IsEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static T Priority<T>(this T self,
        int priority)
        where T : Microsoft.Maui.Controls.MenuBarItem
    {
        self.Priority = priority;
        return self;
    }
    
    public static T Text<T>(this T self,
        string text)
        where T : Microsoft.Maui.Controls.MenuBarItem
    {
        self.SetValue(Microsoft.Maui.Controls.MenuBarItem.TextProperty, text);
        return self;
    }
    
    public static T Text<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.MenuBarItem
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.MenuBarItem.TextProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Text<T>(this SettersContext<T> self,
        string text)
        where T : Microsoft.Maui.Controls.MenuBarItem
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.MenuBarItem.TextProperty, Value = text });
        return self;
    }
    
    public static SettersContext<T> Text<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.MenuBarItem
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.MenuBarItem.TextProperty);
        configure(context).Build();
        return self;
    }
    
}


