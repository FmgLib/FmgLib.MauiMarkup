//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class SearchHandlerExtension
{
    public static T AutomationId<T>(this T self,
        string automationId)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.AutomationIdProperty, automationId);
        return self;
    }
    
    public static T AutomationId<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.SearchHandler.AutomationIdProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> AutomationId<T>(this SettersContext<T> self,
        string automationId)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.AutomationIdProperty, Value = automationId });
        return self;
    }
    
    public static SettersContext<T> AutomationId<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.AutomationIdProperty);
        configure(context).Build();
        return self;
    }
    
    public static T BackgroundColor<T>(this T self,
        Microsoft.Maui.Graphics.Color backgroundColor)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.BackgroundColorProperty, backgroundColor);
        return self;
    }
    
    public static T BackgroundColor<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.SearchHandler.BackgroundColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> BackgroundColor<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color backgroundColor)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.BackgroundColorProperty, Value = backgroundColor });
        return self;
    }
    
    public static SettersContext<T> BackgroundColor<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.BackgroundColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static T CancelButtonColor<T>(this T self,
        Microsoft.Maui.Graphics.Color cancelButtonColor)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.CancelButtonColorProperty, cancelButtonColor);
        return self;
    }
    
    public static T CancelButtonColor<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.SearchHandler.CancelButtonColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> CancelButtonColor<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color cancelButtonColor)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.CancelButtonColorProperty, Value = cancelButtonColor });
        return self;
    }
    
    public static SettersContext<T> CancelButtonColor<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.CancelButtonColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static T CharacterSpacing<T>(this T self,
        double characterSpacing)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.CharacterSpacingProperty, characterSpacing);
        return self;
    }
    
    public static T CharacterSpacing<T>(this T self, Func<PropertyContext<T, double>, IPropertyBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, double>(self, Microsoft.Maui.Controls.SearchHandler.CharacterSpacingProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> CharacterSpacing<T>(this SettersContext<T> self,
        double characterSpacing)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.CharacterSpacingProperty, Value = characterSpacing });
        return self;
    }
    
    public static SettersContext<T> CharacterSpacing<T>(this SettersContext<T> self, Func<PropertySettersContext<T, double>, IPropertySettersBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, double>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.CharacterSpacingProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ClearIcon<T>(this T self,
        Microsoft.Maui.Controls.ImageSource clearIcon)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ClearIconProperty, clearIcon);
        return self;
    }
    
    public static T ClearIcon<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.ImageSource>, IPropertyBuilder<T, Microsoft.Maui.Controls.ImageSource>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.ImageSource>(self, Microsoft.Maui.Controls.SearchHandler.ClearIconProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ClearIcon<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.ImageSource clearIcon)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ClearIconProperty, Value = clearIcon });
        return self;
    }
    
    public static SettersContext<T> ClearIcon<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.ImageSource>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.ImageSource>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.ImageSource>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ClearIconProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ClearIconHelpText<T>(this T self,
        string clearIconHelpText)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ClearIconHelpTextProperty, clearIconHelpText);
        return self;
    }
    
    public static T ClearIconHelpText<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.SearchHandler.ClearIconHelpTextProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ClearIconHelpText<T>(this SettersContext<T> self,
        string clearIconHelpText)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ClearIconHelpTextProperty, Value = clearIconHelpText });
        return self;
    }
    
    public static SettersContext<T> ClearIconHelpText<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ClearIconHelpTextProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ClearIconName<T>(this T self,
        string clearIconName)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ClearIconNameProperty, clearIconName);
        return self;
    }
    
    public static T ClearIconName<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.SearchHandler.ClearIconNameProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ClearIconName<T>(this SettersContext<T> self,
        string clearIconName)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ClearIconNameProperty, Value = clearIconName });
        return self;
    }
    
    public static SettersContext<T> ClearIconName<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ClearIconNameProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ClearPlaceholderCommand<T>(this T self,
        System.Windows.Input.ICommand clearPlaceholderCommand)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandProperty, clearPlaceholderCommand);
        return self;
    }
    
    public static T ClearPlaceholderCommand<T>(this T self, Func<PropertyContext<T, System.Windows.Input.ICommand>, IPropertyBuilder<T, System.Windows.Input.ICommand>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, System.Windows.Input.ICommand>(self, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderCommand<T>(this SettersContext<T> self,
        System.Windows.Input.ICommand clearPlaceholderCommand)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandProperty, Value = clearPlaceholderCommand });
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderCommand<T>(this SettersContext<T> self, Func<PropertySettersContext<T, System.Windows.Input.ICommand>, IPropertySettersBuilder<T, System.Windows.Input.ICommand>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, System.Windows.Input.ICommand>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ClearPlaceholderCommandParameter<T>(this T self,
        object clearPlaceholderCommandParameter)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandParameterProperty, clearPlaceholderCommandParameter);
        return self;
    }
    
    public static T ClearPlaceholderCommandParameter<T>(this T self, Func<PropertyContext<T, object>, IPropertyBuilder<T, object>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, object>(self, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandParameterProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderCommandParameter<T>(this SettersContext<T> self,
        object clearPlaceholderCommandParameter)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandParameterProperty, Value = clearPlaceholderCommandParameter });
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderCommandParameter<T>(this SettersContext<T> self, Func<PropertySettersContext<T, object>, IPropertySettersBuilder<T, object>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, object>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderCommandParameterProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ClearPlaceholderEnabled<T>(this T self,
        bool clearPlaceholderEnabled)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderEnabledProperty, clearPlaceholderEnabled);
        return self;
    }
    
    public static T ClearPlaceholderEnabled<T>(this T self, Func<PropertyContext<T, bool>, IPropertyBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, bool>(self, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderEnabled<T>(this SettersContext<T> self,
        bool clearPlaceholderEnabled)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderEnabledProperty, Value = clearPlaceholderEnabled });
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderEnabled<T>(this SettersContext<T> self, Func<PropertySettersContext<T, bool>, IPropertySettersBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, bool>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ClearPlaceholderHelpText<T>(this T self,
        string clearPlaceholderHelpText)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderHelpTextProperty, clearPlaceholderHelpText);
        return self;
    }
    
    public static T ClearPlaceholderHelpText<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderHelpTextProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderHelpText<T>(this SettersContext<T> self,
        string clearPlaceholderHelpText)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderHelpTextProperty, Value = clearPlaceholderHelpText });
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderHelpText<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderHelpTextProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ClearPlaceholderIcon<T>(this T self,
        Microsoft.Maui.Controls.ImageSource clearPlaceholderIcon)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIconProperty, clearPlaceholderIcon);
        return self;
    }
    
    public static T ClearPlaceholderIcon<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.ImageSource>, IPropertyBuilder<T, Microsoft.Maui.Controls.ImageSource>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.ImageSource>(self, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIconProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderIcon<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.ImageSource clearPlaceholderIcon)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIconProperty, Value = clearPlaceholderIcon });
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderIcon<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.ImageSource>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.ImageSource>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.ImageSource>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderIconProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ClearPlaceholderName<T>(this T self,
        string clearPlaceholderName)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderNameProperty, clearPlaceholderName);
        return self;
    }
    
    public static T ClearPlaceholderName<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderNameProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderName<T>(this SettersContext<T> self,
        string clearPlaceholderName)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderNameProperty, Value = clearPlaceholderName });
        return self;
    }
    
    public static SettersContext<T> ClearPlaceholderName<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ClearPlaceholderNameProperty);
        configure(context).Build();
        return self;
    }
    
    public static T Command<T>(this T self,
        System.Windows.Input.ICommand command)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.CommandProperty, command);
        return self;
    }
    
    public static T Command<T>(this T self, Func<PropertyContext<T, System.Windows.Input.ICommand>, IPropertyBuilder<T, System.Windows.Input.ICommand>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, System.Windows.Input.ICommand>(self, Microsoft.Maui.Controls.SearchHandler.CommandProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Command<T>(this SettersContext<T> self,
        System.Windows.Input.ICommand command)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.CommandProperty, Value = command });
        return self;
    }
    
    public static SettersContext<T> Command<T>(this SettersContext<T> self, Func<PropertySettersContext<T, System.Windows.Input.ICommand>, IPropertySettersBuilder<T, System.Windows.Input.ICommand>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, System.Windows.Input.ICommand>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.CommandProperty);
        configure(context).Build();
        return self;
    }
    
    public static T CommandParameter<T>(this T self,
        object commandParameter)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.CommandParameterProperty, commandParameter);
        return self;
    }
    
    public static T CommandParameter<T>(this T self, Func<PropertyContext<T, object>, IPropertyBuilder<T, object>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, object>(self, Microsoft.Maui.Controls.SearchHandler.CommandParameterProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> CommandParameter<T>(this SettersContext<T> self,
        object commandParameter)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.CommandParameterProperty, Value = commandParameter });
        return self;
    }
    
    public static SettersContext<T> CommandParameter<T>(this SettersContext<T> self, Func<PropertySettersContext<T, object>, IPropertySettersBuilder<T, object>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, object>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.CommandParameterProperty);
        configure(context).Build();
        return self;
    }
    
    public static T FontAttributes<T>(this T self,
        Microsoft.Maui.Controls.FontAttributes fontAttributes)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.FontAttributesProperty, fontAttributes);
        return self;
    }
    
    public static T FontAttributes<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.FontAttributes>, IPropertyBuilder<T, Microsoft.Maui.Controls.FontAttributes>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.FontAttributes>(self, Microsoft.Maui.Controls.SearchHandler.FontAttributesProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> FontAttributes<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.FontAttributes fontAttributes)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.FontAttributesProperty, Value = fontAttributes });
        return self;
    }
    
    public static SettersContext<T> FontAttributes<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.FontAttributes>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.FontAttributes>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.FontAttributes>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.FontAttributesProperty);
        configure(context).Build();
        return self;
    }
    
    public static T FontAutoScalingEnabled<T>(this T self,
        bool fontAutoScalingEnabled)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.FontAutoScalingEnabledProperty, fontAutoScalingEnabled);
        return self;
    }
    
    public static T FontAutoScalingEnabled<T>(this T self, Func<PropertyContext<T, bool>, IPropertyBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, bool>(self, Microsoft.Maui.Controls.SearchHandler.FontAutoScalingEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> FontAutoScalingEnabled<T>(this SettersContext<T> self,
        bool fontAutoScalingEnabled)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.FontAutoScalingEnabledProperty, Value = fontAutoScalingEnabled });
        return self;
    }
    
    public static SettersContext<T> FontAutoScalingEnabled<T>(this SettersContext<T> self, Func<PropertySettersContext<T, bool>, IPropertySettersBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, bool>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.FontAutoScalingEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static T FontFamily<T>(this T self,
        string fontFamily)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.FontFamilyProperty, fontFamily);
        return self;
    }
    
    public static T FontFamily<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.SearchHandler.FontFamilyProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> FontFamily<T>(this SettersContext<T> self,
        string fontFamily)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.FontFamilyProperty, Value = fontFamily });
        return self;
    }
    
    public static SettersContext<T> FontFamily<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.FontFamilyProperty);
        configure(context).Build();
        return self;
    }
    
    public static T FontSize<T>(this T self,
        double fontSize)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.FontSizeProperty, fontSize);
        return self;
    }
    
    public static T FontSize<T>(this T self, Func<PropertyContext<T, double>, IPropertyBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, double>(self, Microsoft.Maui.Controls.SearchHandler.FontSizeProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> FontSize<T>(this SettersContext<T> self,
        double fontSize)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.FontSizeProperty, Value = fontSize });
        return self;
    }
    
    public static SettersContext<T> FontSize<T>(this SettersContext<T> self, Func<PropertySettersContext<T, double>, IPropertySettersBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, double>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.FontSizeProperty);
        configure(context).Build();
        return self;
    }
    
    public static T HorizontalTextAlignment<T>(this T self,
        Microsoft.Maui.TextAlignment horizontalTextAlignment)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.HorizontalTextAlignmentProperty, horizontalTextAlignment);
        return self;
    }
    
    public static T HorizontalTextAlignment<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.TextAlignment>, IPropertyBuilder<T, Microsoft.Maui.TextAlignment>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.TextAlignment>(self, Microsoft.Maui.Controls.SearchHandler.HorizontalTextAlignmentProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> HorizontalTextAlignment<T>(this SettersContext<T> self,
        Microsoft.Maui.TextAlignment horizontalTextAlignment)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.HorizontalTextAlignmentProperty, Value = horizontalTextAlignment });
        return self;
    }
    
    public static SettersContext<T> HorizontalTextAlignment<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.TextAlignment>, IPropertySettersBuilder<T, Microsoft.Maui.TextAlignment>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.TextAlignment>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.HorizontalTextAlignmentProperty);
        configure(context).Build();
        return self;
    }
    
    public static T IsFocused<T>(this T self,
        bool isFocused)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.IsFocusedProperty, isFocused);
        return self;
    }
    
    public static T IsFocused<T>(this T self, Func<PropertyContext<T, bool>, IPropertyBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, bool>(self, Microsoft.Maui.Controls.SearchHandler.IsFocusedProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> IsFocused<T>(this SettersContext<T> self,
        bool isFocused)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.IsFocusedProperty, Value = isFocused });
        return self;
    }
    
    public static SettersContext<T> IsFocused<T>(this SettersContext<T> self, Func<PropertySettersContext<T, bool>, IPropertySettersBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, bool>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.IsFocusedProperty);
        configure(context).Build();
        return self;
    }
    
    public static T IsSearchEnabled<T>(this T self,
        bool isSearchEnabled)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.IsSearchEnabledProperty, isSearchEnabled);
        return self;
    }
    
    public static T IsSearchEnabled<T>(this T self, Func<PropertyContext<T, bool>, IPropertyBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, bool>(self, Microsoft.Maui.Controls.SearchHandler.IsSearchEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> IsSearchEnabled<T>(this SettersContext<T> self,
        bool isSearchEnabled)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.IsSearchEnabledProperty, Value = isSearchEnabled });
        return self;
    }
    
    public static SettersContext<T> IsSearchEnabled<T>(this SettersContext<T> self, Func<PropertySettersContext<T, bool>, IPropertySettersBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, bool>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.IsSearchEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ItemsSource<T>(this T self,
        System.Collections.IEnumerable itemsSource)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ItemsSourceProperty, itemsSource);
        return self;
    }
    
    public static T ItemsSource<T>(this T self, Func<PropertyContext<T, System.Collections.IEnumerable>, IPropertyBuilder<T, System.Collections.IEnumerable>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, System.Collections.IEnumerable>(self, Microsoft.Maui.Controls.SearchHandler.ItemsSourceProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ItemsSource<T>(this SettersContext<T> self,
        System.Collections.IEnumerable itemsSource)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ItemsSourceProperty, Value = itemsSource });
        return self;
    }
    
    public static SettersContext<T> ItemsSource<T>(this SettersContext<T> self, Func<PropertySettersContext<T, System.Collections.IEnumerable>, IPropertySettersBuilder<T, System.Collections.IEnumerable>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, System.Collections.IEnumerable>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ItemsSourceProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ItemTemplate<T>(this T self,
        Microsoft.Maui.Controls.DataTemplate itemTemplate)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ItemTemplateProperty, itemTemplate);
        return self;
    }
    
    public static T ItemTemplate<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.DataTemplate>, IPropertyBuilder<T, Microsoft.Maui.Controls.DataTemplate>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.DataTemplate>(self, Microsoft.Maui.Controls.SearchHandler.ItemTemplateProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ItemTemplate<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.DataTemplate itemTemplate)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ItemTemplateProperty, Value = itemTemplate });
        return self;
    }
    
    public static SettersContext<T> ItemTemplate<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.DataTemplate>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.DataTemplate>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.DataTemplate>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ItemTemplateProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ItemTemplate<T>(this T self, System.Func<object> loadTemplate)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ItemTemplateProperty, new DataTemplate(loadTemplate));
        return self;
    }
    
    public static T Keyboard<T>(this T self,
        Microsoft.Maui.Keyboard keyboard)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.KeyboardProperty, keyboard);
        return self;
    }
    
    public static T Keyboard<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Keyboard>, IPropertyBuilder<T, Microsoft.Maui.Keyboard>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.Keyboard>(self, Microsoft.Maui.Controls.SearchHandler.KeyboardProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Keyboard<T>(this SettersContext<T> self,
        Microsoft.Maui.Keyboard keyboard)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.KeyboardProperty, Value = keyboard });
        return self;
    }
    
    public static SettersContext<T> Keyboard<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Keyboard>, IPropertySettersBuilder<T, Microsoft.Maui.Keyboard>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Keyboard>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.KeyboardProperty);
        configure(context).Build();
        return self;
    }
    
    public static T Placeholder<T>(this T self,
        string placeholder)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.PlaceholderProperty, placeholder);
        return self;
    }
    
    public static T Placeholder<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.SearchHandler.PlaceholderProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Placeholder<T>(this SettersContext<T> self,
        string placeholder)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.PlaceholderProperty, Value = placeholder });
        return self;
    }
    
    public static SettersContext<T> Placeholder<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.PlaceholderProperty);
        configure(context).Build();
        return self;
    }
    
    public static T PlaceholderColor<T>(this T self,
        Microsoft.Maui.Graphics.Color placeholderColor)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.PlaceholderColorProperty, placeholderColor);
        return self;
    }
    
    public static T PlaceholderColor<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.SearchHandler.PlaceholderColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> PlaceholderColor<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color placeholderColor)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.PlaceholderColorProperty, Value = placeholderColor });
        return self;
    }
    
    public static SettersContext<T> PlaceholderColor<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.PlaceholderColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static T Query<T>(this T self,
        string query)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.QueryProperty, query);
        return self;
    }
    
    public static T Query<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.SearchHandler.QueryProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Query<T>(this SettersContext<T> self,
        string query)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.QueryProperty, Value = query });
        return self;
    }
    
    public static SettersContext<T> Query<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.QueryProperty);
        configure(context).Build();
        return self;
    }
    
    public static T QueryIcon<T>(this T self,
        Microsoft.Maui.Controls.ImageSource queryIcon)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.QueryIconProperty, queryIcon);
        return self;
    }
    
    public static T QueryIcon<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.ImageSource>, IPropertyBuilder<T, Microsoft.Maui.Controls.ImageSource>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.ImageSource>(self, Microsoft.Maui.Controls.SearchHandler.QueryIconProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> QueryIcon<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.ImageSource queryIcon)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.QueryIconProperty, Value = queryIcon });
        return self;
    }
    
    public static SettersContext<T> QueryIcon<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.ImageSource>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.ImageSource>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.ImageSource>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.QueryIconProperty);
        configure(context).Build();
        return self;
    }
    
    public static T QueryIconHelpText<T>(this T self,
        string queryIconHelpText)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.QueryIconHelpTextProperty, queryIconHelpText);
        return self;
    }
    
    public static T QueryIconHelpText<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.SearchHandler.QueryIconHelpTextProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> QueryIconHelpText<T>(this SettersContext<T> self,
        string queryIconHelpText)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.QueryIconHelpTextProperty, Value = queryIconHelpText });
        return self;
    }
    
    public static SettersContext<T> QueryIconHelpText<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.QueryIconHelpTextProperty);
        configure(context).Build();
        return self;
    }
    
    public static T QueryIconName<T>(this T self,
        string queryIconName)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.QueryIconNameProperty, queryIconName);
        return self;
    }
    
    public static T QueryIconName<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.SearchHandler.QueryIconNameProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> QueryIconName<T>(this SettersContext<T> self,
        string queryIconName)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.QueryIconNameProperty, Value = queryIconName });
        return self;
    }
    
    public static SettersContext<T> QueryIconName<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.QueryIconNameProperty);
        configure(context).Build();
        return self;
    }
    
    public static T SearchBoxVisibility<T>(this T self,
        Microsoft.Maui.Controls.SearchBoxVisibility searchBoxVisibility)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.SearchBoxVisibilityProperty, searchBoxVisibility);
        return self;
    }
    
    public static T SearchBoxVisibility<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.SearchBoxVisibility>, IPropertyBuilder<T, Microsoft.Maui.Controls.SearchBoxVisibility>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.SearchBoxVisibility>(self, Microsoft.Maui.Controls.SearchHandler.SearchBoxVisibilityProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> SearchBoxVisibility<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.SearchBoxVisibility searchBoxVisibility)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.SearchBoxVisibilityProperty, Value = searchBoxVisibility });
        return self;
    }
    
    public static SettersContext<T> SearchBoxVisibility<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.SearchBoxVisibility>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.SearchBoxVisibility>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.SearchBoxVisibility>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.SearchBoxVisibilityProperty);
        configure(context).Build();
        return self;
    }
    
    public static T SelectedItem<T>(this T self,
        object selectedItem)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.SelectedItemProperty, selectedItem);
        return self;
    }
    
    public static T SelectedItem<T>(this T self, Func<PropertyContext<T, object>, IPropertyBuilder<T, object>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, object>(self, Microsoft.Maui.Controls.SearchHandler.SelectedItemProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> SelectedItem<T>(this SettersContext<T> self,
        object selectedItem)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.SelectedItemProperty, Value = selectedItem });
        return self;
    }
    
    public static SettersContext<T> SelectedItem<T>(this SettersContext<T> self, Func<PropertySettersContext<T, object>, IPropertySettersBuilder<T, object>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, object>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.SelectedItemProperty);
        configure(context).Build();
        return self;
    }
    
    public static T ShowsResults<T>(this T self,
        bool showsResults)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.ShowsResultsProperty, showsResults);
        return self;
    }
    
    public static T ShowsResults<T>(this T self, Func<PropertyContext<T, bool>, IPropertyBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, bool>(self, Microsoft.Maui.Controls.SearchHandler.ShowsResultsProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> ShowsResults<T>(this SettersContext<T> self,
        bool showsResults)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.ShowsResultsProperty, Value = showsResults });
        return self;
    }
    
    public static SettersContext<T> ShowsResults<T>(this SettersContext<T> self, Func<PropertySettersContext<T, bool>, IPropertySettersBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, bool>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.ShowsResultsProperty);
        configure(context).Build();
        return self;
    }
    
    public static T TextColor<T>(this T self,
        Microsoft.Maui.Graphics.Color textColor)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.TextColorProperty, textColor);
        return self;
    }
    
    public static T TextColor<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.SearchHandler.TextColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> TextColor<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color textColor)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.TextColorProperty, Value = textColor });
        return self;
    }
    
    public static SettersContext<T> TextColor<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.TextColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static T TextTransform<T>(this T self,
        Microsoft.Maui.TextTransform textTransform)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.TextTransformProperty, textTransform);
        return self;
    }
    
    public static T TextTransform<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.TextTransform>, IPropertyBuilder<T, Microsoft.Maui.TextTransform>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.TextTransform>(self, Microsoft.Maui.Controls.SearchHandler.TextTransformProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> TextTransform<T>(this SettersContext<T> self,
        Microsoft.Maui.TextTransform textTransform)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.TextTransformProperty, Value = textTransform });
        return self;
    }
    
    public static SettersContext<T> TextTransform<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.TextTransform>, IPropertySettersBuilder<T, Microsoft.Maui.TextTransform>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.TextTransform>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.TextTransformProperty);
        configure(context).Build();
        return self;
    }
    
    public static T VerticalTextAlignment<T>(this T self,
        Microsoft.Maui.TextAlignment verticalTextAlignment)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.SetValue(Microsoft.Maui.Controls.SearchHandler.VerticalTextAlignmentProperty, verticalTextAlignment);
        return self;
    }
    
    public static T VerticalTextAlignment<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.TextAlignment>, IPropertyBuilder<T, Microsoft.Maui.TextAlignment>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertyContext<T, Microsoft.Maui.TextAlignment>(self, Microsoft.Maui.Controls.SearchHandler.VerticalTextAlignmentProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> VerticalTextAlignment<T>(this SettersContext<T> self,
        Microsoft.Maui.TextAlignment verticalTextAlignment)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SearchHandler.VerticalTextAlignmentProperty, Value = verticalTextAlignment });
        return self;
    }
    
    public static SettersContext<T> VerticalTextAlignment<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.TextAlignment>, IPropertySettersBuilder<T, Microsoft.Maui.TextAlignment>> configure)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.TextAlignment>(self.XamlSetters, Microsoft.Maui.Controls.SearchHandler.VerticalTextAlignmentProperty);
        configure(context).Build();
        return self;
    }
    
    public static T OnFocused<T>(this T self, System.EventHandler<System.EventArgs> handler)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.Focused += handler;
        return self;
    }
    
    public static T OnFocused<T>(this T self, System.Action<T> action)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.Focused += (o, arg) => action(self);
        return self;
    }
        
    public static T OnUnfocused<T>(this T self, System.EventHandler<System.EventArgs> handler)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.Unfocused += handler;
        return self;
    }
    
    public static T OnUnfocused<T>(this T self, System.Action<T> action)
        where T : Microsoft.Maui.Controls.SearchHandler
    {
        self.Unfocused += (o, arg) => action(self);
        return self;
    }
        
}


