//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class ShellItemExtension
{
    public static T CurrentItem<T>(this T self,
        Microsoft.Maui.Controls.ShellSection currentItem)
        where T : Microsoft.Maui.Controls.ShellItem
    {
        self.SetValue(Microsoft.Maui.Controls.ShellItem.CurrentItemProperty, currentItem);
        return self;
    }
    
    public static T CurrentItem<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.ShellSection>, IPropertyBuilder<T, Microsoft.Maui.Controls.ShellSection>> configure)
        where T : Microsoft.Maui.Controls.ShellItem
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.ShellSection>(self, Microsoft.Maui.Controls.ShellItem.CurrentItemProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> CurrentItem<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.ShellSection currentItem)
        where T : Microsoft.Maui.Controls.ShellItem
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.ShellItem.CurrentItemProperty, Value = currentItem });
        return self;
    }
    
    public static SettersContext<T> CurrentItem<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.ShellSection>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.ShellSection>> configure)
        where T : Microsoft.Maui.Controls.ShellItem
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.ShellSection>(self.XamlSetters, Microsoft.Maui.Controls.ShellItem.CurrentItemProperty);
        configure(context).Build();
        return self;
    }
    
    public static T Items<T>(this T self,
        IList<ShellSection> items)
        where T : ShellItem
    {
        foreach (var item in items)
            self.Items.Add(item);
        return self;
    }

    public static T Items<T>(this T self,
        params ShellSection[] items)
        where T : ShellItem
    {
        foreach (var item in items)
            self.Items.Add(item);
        return self;
    }
    
    public static T Items<T>(this T self, Func<PropertyContext<T, System.Collections.Generic.IList<Microsoft.Maui.Controls.ShellSection>>, IPropertyBuilder<T, System.Collections.Generic.IList<Microsoft.Maui.Controls.ShellSection>>> configure)
        where T : Microsoft.Maui.Controls.ShellItem
    {
        var context = new PropertyContext<T, System.Collections.Generic.IList<Microsoft.Maui.Controls.ShellSection>>(self, Microsoft.Maui.Controls.ShellItem.ItemsProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Items<T>(this SettersContext<T> self,
        System.Collections.Generic.IList<Microsoft.Maui.Controls.ShellSection> items)
        where T : Microsoft.Maui.Controls.ShellItem
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.ShellItem.ItemsProperty, Value = items });
        return self;
    }
    
    public static SettersContext<T> Items<T>(this SettersContext<T> self, Func<PropertySettersContext<T, System.Collections.Generic.IList<Microsoft.Maui.Controls.ShellSection>>, IPropertySettersBuilder<T, System.Collections.Generic.IList<Microsoft.Maui.Controls.ShellSection>>> configure)
        where T : Microsoft.Maui.Controls.ShellItem
    {
        var context = new PropertySettersContext<T, System.Collections.Generic.IList<Microsoft.Maui.Controls.ShellSection>>(self.XamlSetters, Microsoft.Maui.Controls.ShellItem.ItemsProperty);
        configure(context).Build();
        return self;
    }
    
}


