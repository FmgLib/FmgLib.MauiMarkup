//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class SpanExtension
{
    public static T BackgroundColor<T>(this T self,
        Microsoft.Maui.Graphics.Color backgroundColor)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.BackgroundColorProperty, backgroundColor);
        return self;
    }
    
    public static T BackgroundColor<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Span.BackgroundColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> BackgroundColor<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color backgroundColor)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.BackgroundColorProperty, Value = backgroundColor });
        return self;
    }
    
    public static SettersContext<T> BackgroundColor<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.Span.BackgroundColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static T CharacterSpacing<T>(this T self,
        double characterSpacing)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.CharacterSpacingProperty, characterSpacing);
        return self;
    }
    
    public static T CharacterSpacing<T>(this T self, Func<PropertyContext<T, double>, IPropertyBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, double>(self, Microsoft.Maui.Controls.Span.CharacterSpacingProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> CharacterSpacing<T>(this SettersContext<T> self,
        double characterSpacing)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.CharacterSpacingProperty, Value = characterSpacing });
        return self;
    }
    
    public static SettersContext<T> CharacterSpacing<T>(this SettersContext<T> self, Func<PropertySettersContext<T, double>, IPropertySettersBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, double>(self.XamlSetters, Microsoft.Maui.Controls.Span.CharacterSpacingProperty);
        configure(context).Build();
        return self;
    }
    
    public static T FontAttributes<T>(this T self,
        Microsoft.Maui.Controls.FontAttributes fontAttributes)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.FontAttributesProperty, fontAttributes);
        return self;
    }
    
    public static T FontAttributes<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.FontAttributes>, IPropertyBuilder<T, Microsoft.Maui.Controls.FontAttributes>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.FontAttributes>(self, Microsoft.Maui.Controls.Span.FontAttributesProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> FontAttributes<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.FontAttributes fontAttributes)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.FontAttributesProperty, Value = fontAttributes });
        return self;
    }
    
    public static SettersContext<T> FontAttributes<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.FontAttributes>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.FontAttributes>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.FontAttributes>(self.XamlSetters, Microsoft.Maui.Controls.Span.FontAttributesProperty);
        configure(context).Build();
        return self;
    }
    
    public static T FontAutoScalingEnabled<T>(this T self,
        bool fontAutoScalingEnabled)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.FontAutoScalingEnabledProperty, fontAutoScalingEnabled);
        return self;
    }
    
    public static T FontAutoScalingEnabled<T>(this T self, Func<PropertyContext<T, bool>, IPropertyBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, bool>(self, Microsoft.Maui.Controls.Span.FontAutoScalingEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> FontAutoScalingEnabled<T>(this SettersContext<T> self,
        bool fontAutoScalingEnabled)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.FontAutoScalingEnabledProperty, Value = fontAutoScalingEnabled });
        return self;
    }
    
    public static SettersContext<T> FontAutoScalingEnabled<T>(this SettersContext<T> self, Func<PropertySettersContext<T, bool>, IPropertySettersBuilder<T, bool>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, bool>(self.XamlSetters, Microsoft.Maui.Controls.Span.FontAutoScalingEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static T FontFamily<T>(this T self,
        string fontFamily)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.FontFamilyProperty, fontFamily);
        return self;
    }
    
    public static T FontFamily<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.Span.FontFamilyProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> FontFamily<T>(this SettersContext<T> self,
        string fontFamily)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.FontFamilyProperty, Value = fontFamily });
        return self;
    }
    
    public static SettersContext<T> FontFamily<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.Span.FontFamilyProperty);
        configure(context).Build();
        return self;
    }
    
    public static T FontSize<T>(this T self,
        double fontSize)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.FontSizeProperty, fontSize);
        return self;
    }
    
    public static T FontSize<T>(this T self, Func<PropertyContext<T, double>, IPropertyBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, double>(self, Microsoft.Maui.Controls.Span.FontSizeProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> FontSize<T>(this SettersContext<T> self,
        double fontSize)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.FontSizeProperty, Value = fontSize });
        return self;
    }
    
    public static SettersContext<T> FontSize<T>(this SettersContext<T> self, Func<PropertySettersContext<T, double>, IPropertySettersBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, double>(self.XamlSetters, Microsoft.Maui.Controls.Span.FontSizeProperty);
        configure(context).Build();
        return self;
    }
    
    public static T LineHeight<T>(this T self,
        double lineHeight)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.LineHeightProperty, lineHeight);
        return self;
    }
    
    public static T LineHeight<T>(this T self, Func<PropertyContext<T, double>, IPropertyBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, double>(self, Microsoft.Maui.Controls.Span.LineHeightProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> LineHeight<T>(this SettersContext<T> self,
        double lineHeight)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.LineHeightProperty, Value = lineHeight });
        return self;
    }
    
    public static SettersContext<T> LineHeight<T>(this SettersContext<T> self, Func<PropertySettersContext<T, double>, IPropertySettersBuilder<T, double>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, double>(self.XamlSetters, Microsoft.Maui.Controls.Span.LineHeightProperty);
        configure(context).Build();
        return self;
    }
    
    public static T Style<T>(this T self,
        Microsoft.Maui.Controls.Style style)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.StyleProperty, style);
        return self;
    }
    
    public static T Style<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.Style>, IPropertyBuilder<T, Microsoft.Maui.Controls.Style>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.Style>(self, Microsoft.Maui.Controls.Span.StyleProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Style<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.Style style)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.StyleProperty, Value = style });
        return self;
    }
    
    public static SettersContext<T> Style<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.Style>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.Style>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.Style>(self.XamlSetters, Microsoft.Maui.Controls.Span.StyleProperty);
        configure(context).Build();
        return self;
    }
    
    public static T Text<T>(this T self,
        string text)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.TextProperty, text);
        return self;
    }
    
    public static T Text<T>(this T self, Func<PropertyContext<T, string>, IPropertyBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, string>(self, Microsoft.Maui.Controls.Span.TextProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Text<T>(this SettersContext<T> self,
        string text)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.TextProperty, Value = text });
        return self;
    }
    
    public static SettersContext<T> Text<T>(this SettersContext<T> self, Func<PropertySettersContext<T, string>, IPropertySettersBuilder<T, string>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, string>(self.XamlSetters, Microsoft.Maui.Controls.Span.TextProperty);
        configure(context).Build();
        return self;
    }
    
    public static T TextColor<T>(this T self,
        Microsoft.Maui.Graphics.Color textColor)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.TextColorProperty, textColor);
        return self;
    }
    
    public static T TextColor<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.Span.TextColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> TextColor<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color textColor)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.TextColorProperty, Value = textColor });
        return self;
    }
    
    public static SettersContext<T> TextColor<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.Span.TextColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static T TextDecorations<T>(this T self,
        Microsoft.Maui.TextDecorations textDecorations)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.TextDecorationsProperty, textDecorations);
        return self;
    }
    
    public static T TextDecorations<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.TextDecorations>, IPropertyBuilder<T, Microsoft.Maui.TextDecorations>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, Microsoft.Maui.TextDecorations>(self, Microsoft.Maui.Controls.Span.TextDecorationsProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> TextDecorations<T>(this SettersContext<T> self,
        Microsoft.Maui.TextDecorations textDecorations)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.TextDecorationsProperty, Value = textDecorations });
        return self;
    }
    
    public static SettersContext<T> TextDecorations<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.TextDecorations>, IPropertySettersBuilder<T, Microsoft.Maui.TextDecorations>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.TextDecorations>(self.XamlSetters, Microsoft.Maui.Controls.Span.TextDecorationsProperty);
        configure(context).Build();
        return self;
    }
    
    public static T TextTransform<T>(this T self,
        Microsoft.Maui.TextTransform textTransform)
        where T : Microsoft.Maui.Controls.Span
    {
        self.SetValue(Microsoft.Maui.Controls.Span.TextTransformProperty, textTransform);
        return self;
    }
    
    public static T TextTransform<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.TextTransform>, IPropertyBuilder<T, Microsoft.Maui.TextTransform>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertyContext<T, Microsoft.Maui.TextTransform>(self, Microsoft.Maui.Controls.Span.TextTransformProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> TextTransform<T>(this SettersContext<T> self,
        Microsoft.Maui.TextTransform textTransform)
        where T : Microsoft.Maui.Controls.Span
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.Span.TextTransformProperty, Value = textTransform });
        return self;
    }
    
    public static SettersContext<T> TextTransform<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.TextTransform>, IPropertySettersBuilder<T, Microsoft.Maui.TextTransform>> configure)
        where T : Microsoft.Maui.Controls.Span
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.TextTransform>(self.XamlSetters, Microsoft.Maui.Controls.Span.TextTransformProperty);
        configure(context).Build();
        return self;
    }
    
}


