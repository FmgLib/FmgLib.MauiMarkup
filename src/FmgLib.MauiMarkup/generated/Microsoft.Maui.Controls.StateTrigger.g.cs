//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class StateTriggerExtension
{
    public static Microsoft.Maui.Controls.StateTrigger IsActiveNew(this Microsoft.Maui.Controls.StateTrigger self,
        bool isActive)
    {
        self.SetValue(Microsoft.Maui.Controls.StateTrigger.IsActiveProperty, isActive);
        return self;
    }
    
    public static Microsoft.Maui.Controls.StateTrigger IsActiveNew(this Microsoft.Maui.Controls.StateTrigger self, Func<PropertyContext<Microsoft.Maui.Controls.StateTrigger , bool>, IPropertyBuilder<Microsoft.Maui.Controls.StateTrigger , bool>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.StateTrigger , bool>(self, Microsoft.Maui.Controls.StateTrigger.IsActiveProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.StateTrigger> IsActiveNew(this SettersContext<Microsoft.Maui.Controls.StateTrigger> self,
        bool isActive)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.StateTrigger.IsActiveProperty, Value = isActive });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.StateTrigger> IsActiveNew(this SettersContext<Microsoft.Maui.Controls.StateTrigger> self, Func<PropertySettersContext<Microsoft.Maui.Controls.StateTrigger, bool>, IPropertySettersBuilder<Microsoft.Maui.Controls.StateTrigger, bool>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.StateTrigger, bool>(self.XamlSetters, Microsoft.Maui.Controls.StateTrigger.IsActiveProperty);
        configure(context).Build();
        return self;
    }
    
}


