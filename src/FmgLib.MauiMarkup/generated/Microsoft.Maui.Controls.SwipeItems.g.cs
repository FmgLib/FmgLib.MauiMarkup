//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class SwipeItemsExtension
{
    public static T Mode<T>(this T self,
        Microsoft.Maui.SwipeMode mode)
        where T : Microsoft.Maui.Controls.SwipeItems
    {
        self.SetValue(Microsoft.Maui.Controls.SwipeItems.ModeProperty, mode);
        return self;
    }
    
    public static T Mode<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.SwipeMode>, IPropertyBuilder<T, Microsoft.Maui.SwipeMode>> configure)
        where T : Microsoft.Maui.Controls.SwipeItems
    {
        var context = new PropertyContext<T, Microsoft.Maui.SwipeMode>(self, Microsoft.Maui.Controls.SwipeItems.ModeProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> Mode<T>(this SettersContext<T> self,
        Microsoft.Maui.SwipeMode mode)
        where T : Microsoft.Maui.Controls.SwipeItems
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SwipeItems.ModeProperty, Value = mode });
        return self;
    }
    
    public static SettersContext<T> Mode<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.SwipeMode>, IPropertySettersBuilder<T, Microsoft.Maui.SwipeMode>> configure)
        where T : Microsoft.Maui.Controls.SwipeItems
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.SwipeMode>(self.XamlSetters, Microsoft.Maui.Controls.SwipeItems.ModeProperty);
        configure(context).Build();
        return self;
    }
    
    public static T SwipeBehaviorOnInvoked<T>(this T self,
        Microsoft.Maui.SwipeBehaviorOnInvoked swipeBehaviorOnInvoked)
        where T : Microsoft.Maui.Controls.SwipeItems
    {
        self.SetValue(Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvokedProperty, swipeBehaviorOnInvoked);
        return self;
    }
    
    public static T SwipeBehaviorOnInvoked<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.SwipeBehaviorOnInvoked>, IPropertyBuilder<T, Microsoft.Maui.SwipeBehaviorOnInvoked>> configure)
        where T : Microsoft.Maui.Controls.SwipeItems
    {
        var context = new PropertyContext<T, Microsoft.Maui.SwipeBehaviorOnInvoked>(self, Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvokedProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> SwipeBehaviorOnInvoked<T>(this SettersContext<T> self,
        Microsoft.Maui.SwipeBehaviorOnInvoked swipeBehaviorOnInvoked)
        where T : Microsoft.Maui.Controls.SwipeItems
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvokedProperty, Value = swipeBehaviorOnInvoked });
        return self;
    }
    
    public static SettersContext<T> SwipeBehaviorOnInvoked<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.SwipeBehaviorOnInvoked>, IPropertySettersBuilder<T, Microsoft.Maui.SwipeBehaviorOnInvoked>> configure)
        where T : Microsoft.Maui.Controls.SwipeItems
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.SwipeBehaviorOnInvoked>(self.XamlSetters, Microsoft.Maui.Controls.SwipeItems.SwipeBehaviorOnInvokedProperty);
        configure(context).Build();
        return self;
    }
    
    public static T OnCollectionChanged<T>(this T self, System.Collections.Specialized.NotifyCollectionChangedEventHandler handler)
        where T : Microsoft.Maui.Controls.SwipeItems
    {
        self.CollectionChanged += handler;
        return self;
    }
    
    public static T OnCollectionChanged<T>(this T self, System.Action<T> action)
        where T : Microsoft.Maui.Controls.SwipeItems
    {
        self.CollectionChanged += (o, arg) => action(self);
        return self;
    }
        
}


