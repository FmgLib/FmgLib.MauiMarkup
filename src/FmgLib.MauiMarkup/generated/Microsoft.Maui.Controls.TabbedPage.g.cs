//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class TabbedPageExtension
{
    public static T BarBackground<T>(this T self,
        Microsoft.Maui.Controls.Brush barBackground)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        self.SetValue(Microsoft.Maui.Controls.TabbedPage.BarBackgroundProperty, barBackground);
        return self;
    }
    
    public static T BarBackground<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Controls.Brush>, IPropertyBuilder<T, Microsoft.Maui.Controls.Brush>> configure)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        var context = new PropertyContext<T, Microsoft.Maui.Controls.Brush>(self, Microsoft.Maui.Controls.TabbedPage.BarBackgroundProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> BarBackground<T>(this SettersContext<T> self,
        Microsoft.Maui.Controls.Brush barBackground)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.TabbedPage.BarBackgroundProperty, Value = barBackground });
        return self;
    }
    
    public static SettersContext<T> BarBackground<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Controls.Brush>, IPropertySettersBuilder<T, Microsoft.Maui.Controls.Brush>> configure)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Controls.Brush>(self.XamlSetters, Microsoft.Maui.Controls.TabbedPage.BarBackgroundProperty);
        configure(context).Build();
        return self;
    }
    
    public static T BarBackgroundColor<T>(this T self,
        Microsoft.Maui.Graphics.Color barBackgroundColor)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        self.SetValue(Microsoft.Maui.Controls.TabbedPage.BarBackgroundColorProperty, barBackgroundColor);
        return self;
    }
    
    public static T BarBackgroundColor<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.TabbedPage.BarBackgroundColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> BarBackgroundColor<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color barBackgroundColor)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.TabbedPage.BarBackgroundColorProperty, Value = barBackgroundColor });
        return self;
    }
    
    public static SettersContext<T> BarBackgroundColor<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.TabbedPage.BarBackgroundColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static Task<bool> AnimateBarBackgroundColorTo<T>(this T self, Microsoft.Maui.Graphics.Color value, uint length = 250, Easing? easing = null)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        Microsoft.Maui.Graphics.Color fromValue = self.BarBackgroundColor;
        var transform = (double t) => Transformations.ColorTransform(fromValue, value, t);
        var callback = (Microsoft.Maui.Graphics.Color actValue) => { self.SetValue(Microsoft.Maui.Controls.TabbedPage.BarBackgroundColorProperty, actValue); };
        return Transformations.AnimateAsync<Microsoft.Maui.Graphics.Color>(self, "AnimateBarBackgroundColorTo", transform, callback, length, easing);
    }
    
    public static T BarTextColor<T>(this T self,
        Microsoft.Maui.Graphics.Color barTextColor)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        self.SetValue(Microsoft.Maui.Controls.TabbedPage.BarTextColorProperty, barTextColor);
        return self;
    }
    
    public static T BarTextColor<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.TabbedPage.BarTextColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> BarTextColor<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color barTextColor)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.TabbedPage.BarTextColorProperty, Value = barTextColor });
        return self;
    }
    
    public static SettersContext<T> BarTextColor<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.TabbedPage.BarTextColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static Task<bool> AnimateBarTextColorTo<T>(this T self, Microsoft.Maui.Graphics.Color value, uint length = 250, Easing? easing = null)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        Microsoft.Maui.Graphics.Color fromValue = self.BarTextColor;
        var transform = (double t) => Transformations.ColorTransform(fromValue, value, t);
        var callback = (Microsoft.Maui.Graphics.Color actValue) => { self.SetValue(Microsoft.Maui.Controls.TabbedPage.BarTextColorProperty, actValue); };
        return Transformations.AnimateAsync<Microsoft.Maui.Graphics.Color>(self, "AnimateBarTextColorTo", transform, callback, length, easing);
    }
    
    public static T SelectedTabColor<T>(this T self,
        Microsoft.Maui.Graphics.Color selectedTabColor)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        self.SetValue(Microsoft.Maui.Controls.TabbedPage.SelectedTabColorProperty, selectedTabColor);
        return self;
    }
    
    public static T SelectedTabColor<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.TabbedPage.SelectedTabColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> SelectedTabColor<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color selectedTabColor)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.TabbedPage.SelectedTabColorProperty, Value = selectedTabColor });
        return self;
    }
    
    public static SettersContext<T> SelectedTabColor<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.TabbedPage.SelectedTabColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static Task<bool> AnimateSelectedTabColorTo<T>(this T self, Microsoft.Maui.Graphics.Color value, uint length = 250, Easing? easing = null)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        Microsoft.Maui.Graphics.Color fromValue = self.SelectedTabColor;
        var transform = (double t) => Transformations.ColorTransform(fromValue, value, t);
        var callback = (Microsoft.Maui.Graphics.Color actValue) => { self.SetValue(Microsoft.Maui.Controls.TabbedPage.SelectedTabColorProperty, actValue); };
        return Transformations.AnimateAsync<Microsoft.Maui.Graphics.Color>(self, "AnimateSelectedTabColorTo", transform, callback, length, easing);
    }
    
    public static T UnselectedTabColor<T>(this T self,
        Microsoft.Maui.Graphics.Color unselectedTabColor)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        self.SetValue(Microsoft.Maui.Controls.TabbedPage.UnselectedTabColorProperty, unselectedTabColor);
        return self;
    }
    
    public static T UnselectedTabColor<T>(this T self, Func<PropertyContext<T, Microsoft.Maui.Graphics.Color>, IPropertyBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        var context = new PropertyContext<T, Microsoft.Maui.Graphics.Color>(self, Microsoft.Maui.Controls.TabbedPage.UnselectedTabColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<T> UnselectedTabColor<T>(this SettersContext<T> self,
        Microsoft.Maui.Graphics.Color unselectedTabColor)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.TabbedPage.UnselectedTabColorProperty, Value = unselectedTabColor });
        return self;
    }
    
    public static SettersContext<T> UnselectedTabColor<T>(this SettersContext<T> self, Func<PropertySettersContext<T, Microsoft.Maui.Graphics.Color>, IPropertySettersBuilder<T, Microsoft.Maui.Graphics.Color>> configure)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        var context = new PropertySettersContext<T, Microsoft.Maui.Graphics.Color>(self.XamlSetters, Microsoft.Maui.Controls.TabbedPage.UnselectedTabColorProperty);
        configure(context).Build();
        return self;
    }
    
    public static Task<bool> AnimateUnselectedTabColorTo<T>(this T self, Microsoft.Maui.Graphics.Color value, uint length = 250, Easing? easing = null)
        where T : Microsoft.Maui.Controls.TabbedPage
    {
        Microsoft.Maui.Graphics.Color fromValue = self.UnselectedTabColor;
        var transform = (double t) => Transformations.ColorTransform(fromValue, value, t);
        var callback = (Microsoft.Maui.Graphics.Color actValue) => { self.SetValue(Microsoft.Maui.Controls.TabbedPage.UnselectedTabColorProperty, actValue); };
        return Transformations.AnimateAsync<Microsoft.Maui.Graphics.Color>(self, "AnimateUnselectedTabColorTo", transform, callback, length, easing);
    }
    
}


