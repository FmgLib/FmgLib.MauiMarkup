//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class TapGestureRecognizerExtension
{
    public static Microsoft.Maui.Controls.TapGestureRecognizer Buttons(this Microsoft.Maui.Controls.TapGestureRecognizer self,
        Microsoft.Maui.Controls.ButtonsMask buttons)
    {
        self.SetValue(Microsoft.Maui.Controls.TapGestureRecognizer.ButtonsProperty, buttons);
        return self;
    }
    
    public static Microsoft.Maui.Controls.TapGestureRecognizer Buttons(this Microsoft.Maui.Controls.TapGestureRecognizer self, Func<PropertyContext<Microsoft.Maui.Controls.TapGestureRecognizer , Microsoft.Maui.Controls.ButtonsMask>, IPropertyBuilder<Microsoft.Maui.Controls.TapGestureRecognizer , Microsoft.Maui.Controls.ButtonsMask>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.TapGestureRecognizer , Microsoft.Maui.Controls.ButtonsMask>(self, Microsoft.Maui.Controls.TapGestureRecognizer.ButtonsProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> Buttons(this SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> self,
        Microsoft.Maui.Controls.ButtonsMask buttons)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.TapGestureRecognizer.ButtonsProperty, Value = buttons });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> Buttons(this SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> self, Func<PropertySettersContext<Microsoft.Maui.Controls.TapGestureRecognizer, Microsoft.Maui.Controls.ButtonsMask>, IPropertySettersBuilder<Microsoft.Maui.Controls.TapGestureRecognizer, Microsoft.Maui.Controls.ButtonsMask>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.TapGestureRecognizer, Microsoft.Maui.Controls.ButtonsMask>(self.XamlSetters, Microsoft.Maui.Controls.TapGestureRecognizer.ButtonsProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.TapGestureRecognizer Command(this Microsoft.Maui.Controls.TapGestureRecognizer self,
        System.Windows.Input.ICommand? command)
    {
        self.SetValue(Microsoft.Maui.Controls.TapGestureRecognizer.CommandProperty, command);
        return self;
    }
    
    public static Microsoft.Maui.Controls.TapGestureRecognizer Command(this Microsoft.Maui.Controls.TapGestureRecognizer self, Func<PropertyContext<Microsoft.Maui.Controls.TapGestureRecognizer , System.Windows.Input.ICommand?>, IPropertyBuilder<Microsoft.Maui.Controls.TapGestureRecognizer , System.Windows.Input.ICommand?>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.TapGestureRecognizer , System.Windows.Input.ICommand?>(self, Microsoft.Maui.Controls.TapGestureRecognizer.CommandProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> Command(this SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> self,
        System.Windows.Input.ICommand? command)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.TapGestureRecognizer.CommandProperty, Value = command });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> Command(this SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> self, Func<PropertySettersContext<Microsoft.Maui.Controls.TapGestureRecognizer, System.Windows.Input.ICommand?>, IPropertySettersBuilder<Microsoft.Maui.Controls.TapGestureRecognizer, System.Windows.Input.ICommand?>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.TapGestureRecognizer, System.Windows.Input.ICommand?>(self.XamlSetters, Microsoft.Maui.Controls.TapGestureRecognizer.CommandProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.TapGestureRecognizer CommandParameter(this Microsoft.Maui.Controls.TapGestureRecognizer self,
        object? commandParameter)
    {
        self.SetValue(Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameterProperty, commandParameter);
        return self;
    }
    
    public static Microsoft.Maui.Controls.TapGestureRecognizer CommandParameter(this Microsoft.Maui.Controls.TapGestureRecognizer self, Func<PropertyContext<Microsoft.Maui.Controls.TapGestureRecognizer , object?>, IPropertyBuilder<Microsoft.Maui.Controls.TapGestureRecognizer , object?>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.TapGestureRecognizer , object?>(self, Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameterProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> CommandParameter(this SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> self,
        object? commandParameter)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameterProperty, Value = commandParameter });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> CommandParameter(this SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> self, Func<PropertySettersContext<Microsoft.Maui.Controls.TapGestureRecognizer, object?>, IPropertySettersBuilder<Microsoft.Maui.Controls.TapGestureRecognizer, object?>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.TapGestureRecognizer, object?>(self.XamlSetters, Microsoft.Maui.Controls.TapGestureRecognizer.CommandParameterProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.TapGestureRecognizer NumberOfTapsRequired(this Microsoft.Maui.Controls.TapGestureRecognizer self,
        int numberOfTapsRequired)
    {
        self.SetValue(Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequiredProperty, numberOfTapsRequired);
        return self;
    }
    
    public static Microsoft.Maui.Controls.TapGestureRecognizer NumberOfTapsRequired(this Microsoft.Maui.Controls.TapGestureRecognizer self, Func<PropertyContext<Microsoft.Maui.Controls.TapGestureRecognizer , int>, IPropertyBuilder<Microsoft.Maui.Controls.TapGestureRecognizer , int>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.TapGestureRecognizer , int>(self, Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequiredProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> NumberOfTapsRequired(this SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> self,
        int numberOfTapsRequired)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequiredProperty, Value = numberOfTapsRequired });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> NumberOfTapsRequired(this SettersContext<Microsoft.Maui.Controls.TapGestureRecognizer> self, Func<PropertySettersContext<Microsoft.Maui.Controls.TapGestureRecognizer, int>, IPropertySettersBuilder<Microsoft.Maui.Controls.TapGestureRecognizer, int>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.TapGestureRecognizer, int>(self.XamlSetters, Microsoft.Maui.Controls.TapGestureRecognizer.NumberOfTapsRequiredProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.TapGestureRecognizer OnTapped(this Microsoft.Maui.Controls.TapGestureRecognizer self, System.EventHandler<Microsoft.Maui.Controls.TappedEventArgs>? handler)
    {
        self.Tapped += handler;
        return self;
    }
    
    public static Microsoft.Maui.Controls.TapGestureRecognizer OnTapped(this Microsoft.Maui.Controls.TapGestureRecognizer self, System.Action<Microsoft.Maui.Controls.TapGestureRecognizer> action)
    {
        self.Tapped += (o, arg) => action(self);
        return self;
    }
        
}


