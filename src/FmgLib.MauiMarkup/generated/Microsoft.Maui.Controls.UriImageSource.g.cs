//
// <auto-generated-fmglib-mauimarkup-generator />
//


namespace FmgLib.MauiMarkup;

public static partial class UriImageSourceExtension
{
    public static Microsoft.Maui.Controls.UriImageSource CacheValidity(this Microsoft.Maui.Controls.UriImageSource self,
        System.TimeSpan cacheValidity)
    {
        self.SetValue(Microsoft.Maui.Controls.UriImageSource.CacheValidityProperty, cacheValidity);
        return self;
    }
    
    public static Microsoft.Maui.Controls.UriImageSource CacheValidity(this Microsoft.Maui.Controls.UriImageSource self, Func<PropertyContext<Microsoft.Maui.Controls.UriImageSource , System.TimeSpan>, IPropertyBuilder<Microsoft.Maui.Controls.UriImageSource , System.TimeSpan>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.UriImageSource , System.TimeSpan>(self, Microsoft.Maui.Controls.UriImageSource.CacheValidityProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.UriImageSource> CacheValidity(this SettersContext<Microsoft.Maui.Controls.UriImageSource> self,
        System.TimeSpan cacheValidity)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.UriImageSource.CacheValidityProperty, Value = cacheValidity });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.UriImageSource> CacheValidity(this SettersContext<Microsoft.Maui.Controls.UriImageSource> self, Func<PropertySettersContext<Microsoft.Maui.Controls.UriImageSource, System.TimeSpan>, IPropertySettersBuilder<Microsoft.Maui.Controls.UriImageSource, System.TimeSpan>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.UriImageSource, System.TimeSpan>(self.XamlSetters, Microsoft.Maui.Controls.UriImageSource.CacheValidityProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.UriImageSource CachingEnabled(this Microsoft.Maui.Controls.UriImageSource self,
        bool cachingEnabled)
    {
        self.SetValue(Microsoft.Maui.Controls.UriImageSource.CachingEnabledProperty, cachingEnabled);
        return self;
    }
    
    public static Microsoft.Maui.Controls.UriImageSource CachingEnabled(this Microsoft.Maui.Controls.UriImageSource self, Func<PropertyContext<Microsoft.Maui.Controls.UriImageSource , bool>, IPropertyBuilder<Microsoft.Maui.Controls.UriImageSource , bool>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.UriImageSource , bool>(self, Microsoft.Maui.Controls.UriImageSource.CachingEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.UriImageSource> CachingEnabled(this SettersContext<Microsoft.Maui.Controls.UriImageSource> self,
        bool cachingEnabled)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.UriImageSource.CachingEnabledProperty, Value = cachingEnabled });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.UriImageSource> CachingEnabled(this SettersContext<Microsoft.Maui.Controls.UriImageSource> self, Func<PropertySettersContext<Microsoft.Maui.Controls.UriImageSource, bool>, IPropertySettersBuilder<Microsoft.Maui.Controls.UriImageSource, bool>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.UriImageSource, bool>(self.XamlSetters, Microsoft.Maui.Controls.UriImageSource.CachingEnabledProperty);
        configure(context).Build();
        return self;
    }
    
    public static Microsoft.Maui.Controls.UriImageSource Uri(this Microsoft.Maui.Controls.UriImageSource self,
        System.Uri uri)
    {
        self.SetValue(Microsoft.Maui.Controls.UriImageSource.UriProperty, uri);
        return self;
    }
    
    public static Microsoft.Maui.Controls.UriImageSource Uri(this Microsoft.Maui.Controls.UriImageSource self, Func<PropertyContext<Microsoft.Maui.Controls.UriImageSource , System.Uri>, IPropertyBuilder<Microsoft.Maui.Controls.UriImageSource , System.Uri>> configure)
    {
        var context = new PropertyContext<Microsoft.Maui.Controls.UriImageSource , System.Uri>(self, Microsoft.Maui.Controls.UriImageSource.UriProperty);
        configure(context).Build();
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.UriImageSource> Uri(this SettersContext<Microsoft.Maui.Controls.UriImageSource> self,
        System.Uri uri)
    {
        self.XamlSetters.Add(new Setter { Property = Microsoft.Maui.Controls.UriImageSource.UriProperty, Value = uri });
        return self;
    }
    
    public static SettersContext<Microsoft.Maui.Controls.UriImageSource> Uri(this SettersContext<Microsoft.Maui.Controls.UriImageSource> self, Func<PropertySettersContext<Microsoft.Maui.Controls.UriImageSource, System.Uri>, IPropertySettersBuilder<Microsoft.Maui.Controls.UriImageSource, System.Uri>> configure)
    {
        var context = new PropertySettersContext<Microsoft.Maui.Controls.UriImageSource, System.Uri>(self.XamlSetters, Microsoft.Maui.Controls.UriImageSource.UriProperty);
        configure(context).Build();
        return self;
    }
    
}


